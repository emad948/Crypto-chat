{"version":3,"sources":["Message.js","firebase.js","App.js","index.js"],"names":["Message","forwardRef","ref","messages","loggedIn","map","msg","username","message","isUser","token","List","ListItem","className","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","setMessages","setUsername","setToken","useEffect","prompt","collection","orderBy","onSnapshot","snapshot","docs","doc","data","FormControl","InputLabel","Input","type","value","onChange","e","target","Button","disabled","variant","color","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAkCeA,EAzBDC,sBAAW,WAAyBC,GAAS,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,SAClC,OACI,qBAAKF,IAAKA,EAAV,SACKC,EAASE,KAAI,SAACC,GAAS,IACZC,EAA2BD,EAA3BC,SAAUC,EAAiBF,EAAjBE,QACZC,GAD6BH,EAARI,MACdH,IAAWH,GAExB,OACI,8BACKI,GAAS,cAACG,EAAA,EAAD,UACN,eAACC,EAAA,EAAD,CAAUC,UAAS,UAAKJ,GAAQ,kBAAhC,UACI,cAACK,EAAA,EAAD,CAAgBD,UAAS,UAAKJ,GAAQ,kBAAtC,SACI,cAACM,EAAA,EAAD,CAAQC,IAAKT,EAAUU,IAAI,kFAE/B,cAACC,EAAA,EAAD,CAAcC,QAASX,EAASY,UAAWb,mB,QCJ5Dc,EAjBGC,IAASC,cAAc,CAGrCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKEC,YCmCNC,EA5CL,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,CAAC,CAAE1B,SAAU,GAAIC,QAAS,GAAIE,MAAO,MAF9D,mBAEPP,EAFO,KAEGiC,EAFH,OAGgBH,mBAAS,IAHzB,mBAGP1B,EAHO,KAGG8B,EAHH,OAIUJ,mBAAS,IAJnB,mBAIPvB,EAJO,KAIA4B,EAJA,KAKdC,qBAAU,WACRF,EAAYG,OAAO,8BACnBF,EAASE,OAAO,6CACf,IAEHD,qBAAU,WACRlB,EAAGoB,WAAW,YAAYC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAChER,EAAYQ,EAASC,KAAKxC,KAAI,SAAAyC,GAAG,OAAIA,EAAIC,gBAE1C,IAcH,OACE,gCACE,6CACA,0CAAaxC,KACb,+BACE,eAACyC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,MAAOlB,EAAOmB,SAAU,SAAAC,GAAC,OAAInB,EAASmB,EAAEC,OAAOH,UAClE,cAACI,EAAA,EAAD,CAAQC,UAAWvB,EAAOwB,QAAQ,YAAYC,MAAM,UAAUR,KAAK,SAASS,QApBjE,SAACN,GAClBA,EAAEO,iBAEFxC,EAAGoB,WAAW,YAAYqB,IAAI,CAC5BtD,QAAS0B,EACT3B,SAAUA,EACVG,MAAOA,EACPqD,UAAWzC,IAASS,UAAUiC,WAAWC,oBAE3C9B,EAAS,KAWH,gCAGJ,cAAC,EAAD,CAAShC,SAAUA,EAAUC,SAAUG,QCxC7C2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3aca020.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './message.css'\r\n\r\n\r\nconst Message=forwardRef(({ messages, loggedIn }, ref) => {\r\n    return (\r\n        <div ref={ref}>\r\n            {messages.map((msg) => {\r\n                const { username, message, token }=msg;\r\n                const isUser=username===loggedIn;\r\n\r\n                return (\r\n                    <div  >\r\n                        {message&&<List  >\r\n                            <ListItem className={`${isUser&&\"loggeding_user\"}`} >\r\n                                <ListItemAvatar className={`${isUser&&\"loggeding_user\"}`} >\r\n                                    <Avatar alt={username} src=\"https://block-builders.de/wp-content/uploads/2021/01/Dogecoin-1-678x381.png\" />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={message} secondary={username} />\r\n                            </ListItem>\r\n                        </List>}\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n\r\n\r\n    apiKey: \"AIzaSyAbRQ2shWKnB6ypeOV_dqsy7FoQK1l8ZbA\",\r\n    authDomain: \"messenger-clone-500a6.firebaseapp.com\",\r\n    projectId: \"messenger-clone-500a6\",\r\n    storageBucket: \"messenger-clone-500a6.appspot.com\",\r\n    messagingSenderId: \"247325933924\",\r\n    appId: \"1:247325933924:web:82c630c70dbe5aa0a47a71\",\r\n    measurementId: \"G-72075XSN6R\"\r\n\r\n});\r\n\r\n\r\nconst db=firebaseApp.firestore();\r\n\r\n\r\nexport default db;","import { Button, Input, InputLabel } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { FormControl } from '@material-ui/core';\nimport Message from './Message'\nimport db from './firebase';\nimport firebase from 'firebase';\n\nconst App=() => {\n  const [input, setInput]=useState(\"\");\n  const [messages, setMessages]=useState([{ username: \"\", message: \"\", token: \"\" }]);\n  const [username, setUsername]=useState(\"\");\n  const [token, setToken]=useState(\"\");\n  useEffect(() => {\n    setUsername(prompt('Please enter your Name :)'));\n    setToken(prompt('What is your favorite crypto-currency?'));\n  }, [])\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', \"desc\").onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()))\n    })\n  }, [])\n\n  const handleSubmit=(e) => {\n    e.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      token: token,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput(\"\");\n  }\n\n  return (\n    <div>\n      <h1> Hello Emad</h1>\n      <h2>Welcome {username}</h2>\n      <form>\n        <FormControl>\n          <InputLabel>Enter a message</InputLabel>\n          <Input type=\"text\" value={input} onChange={e => setInput(e.target.value)}></Input>\n          <Button disabled={!input} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleSubmit}> Send Message</Button>\n        </FormControl>\n      </form>\n      <Message messages={messages} loggedIn={username} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}